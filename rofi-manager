#!/bin/bash
#Rofi-Manager
#Tool to manage rofi settings
#V.0.6 by Melber and MX Devs, 03 October 2022
#License: GPL-3.0+
#mxrm-icon based on applications-development and applications-interfacedesign icons from papirus icon set
#added location and font functions

#set up translation

source gettext.sh

export TEXTDOMAINDIR=/usr/share/locale 
export TEXTDOMAIN="mxfb-accessories"


#define some variables

ROFIPATH="$HOME/.config/rofi/themes"
ICONPATH="/usr/share/pixmaps/mxrm-icon.png"

#delete stylelist and tempclr after use
#trap "rm -r "$ROFIPATH/tempdir" " EXIT

#
if [ ! -d $ROFIPATH ]; then

	mkdir $ROFIPATH

fi

#create tempdir

if [ ! -d $ROFIPATH/tempdir ]; then

	mkdir -p $ROFIPATH/tempdir

fi


# Check if MX-comfort-rr exists, create if false

if [ ! -f $ROFIPATH/MX-comfort-rr ]; then

	printf "#1D2324 #CACDD0 #29353B #ffffff #29353B #CACDD0 #1D2324 #ffffff #0f56d9 #0f56d9 #ffffff MX-comfort yes" > $ROFIPATH/MX-comfort-rr

fi


# notify user and back up config.rasi if mx-rofi-manager has not already been launched

if [ ! -f $ROFIPATH/MX-comfort-rr ]; then

NOW=$(date +%Y"%m%d")

MESSAGE="$(eval_gettext 'This tool edits the rofi config file.\n\nThe existing file will be backed up as \n\n<b>$HOME/.restore/rofi/config.rasi_$NOW</b>')"

##begin message box
yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=350 --height=200 --text-align=center --text="\n\n$MESSAGE\n\n" --text-align=center --center --borders=20 --button="gtk-cancel":7 --button="$(gettext 'OK to proceed?')":6


if [ ! "$?" = "6" ]; then

	exit 0
		
else

mkdir -p $HOME/.restore/rofi/
cp $HOME/.config/rofi/config.rasi $HOME/.restore/rofi/config.rasi_$(date -d "today" +"%Y%m%d")
cp /usr/share/rofi/config.rasi $HOME/.config/rofi/
#cp /usr/share/rofi/rofi-help $HOME/.config/rofi/  << will be called from installation location
#cp /usr/share/rofi/calc-help $HOME/.config/rofi/  << will be called from installation location
cp /usr/share/mxrr/template.rasi $HOME/.config/rofi/themes/
cp /usr/share/mxrr/MX-comfort.rasi $HOME/.config/rofi/themes/  

fi
fi

###################################################################
###################################################################
# function rofi_theme

rofi_theme() {

TITLE="$(gettext 'Rofi-Theme')"
CLASS="mxrm"
ROFIPATH="$HOME/.config/rofi/themes"
ROFIPATHUSR="/usr/share/rofi/themes"
ICONPATH="/usr/share/pixmaps/mxrm-icon.png"
source gettext.sh

#################################
#fix rasi

cd $HOME/.config/rofi

ROFICHECK1="$(grep "@import" config.rasi)"

if [ "$ROFICHECK1" = "" ]; then

sed -i "s/@import/@theme/g" config.rasi

fi

ROFICHECK2="$(grep "//width" config.rasi)"

if [ "$ROFICHECK2" = "" ]; then

sed -i 's/width\:/\/\/width\:/g' config.rasi
sed -i 's/lines\:/\/\/lines\:/g' config.rasi
sed -i 's/fake-transparency\:/\/\/fake-transparency\:/g' config.rasi

fi

#################################
#define function rofi_preview
rofi_preview() {

TEMPTHEME=$1

ROFIPATH="$HOME/.config/rofi/themes"
ROFIPATHUSR="/usr/share/rofi/themes"

ROFIOLD="$(grep '@theme' $HOME/.config/rofi/config.rasi | tail -1)"
ROFIOLD=$(echo "${ROFIOLD}" | sed -e 's/[]$\/*[\^]/\\&/g' )


if [ ! -f $ROFIPATH/$TEMPTHEME.rasi ]; then

	ROFITEMP="@theme \""$ROFIPATHUSR"/"$TEMPTHEME".rasi"\"
	ROFITEMP=$(echo "${ROFITEMP}" | sed -e 's/[]$\/*[\^]/\\&/g' )

	else

	ROFITEMP="@theme \""$ROFIPATH"/"$TEMPTHEME".rasi"\"
	ROFITEMP=$(echo "${ROFITEMP}" | sed -e 's/[]$\/*[\^]/\\&/g' )

fi

cd $HOME/.config/rofi/

cp config.rasi config-temp.rasi

sed -i -e "s/${ROFIOLD}/${ROFITEMP}/g" config.rasi

rofi -show

sed -i -e "s/${ROFITEMP}/${ROFIOLD}/g" config.rasi

exit

}

export -f rofi_preview

#################################
#read available themes

cd $ROFIPATH
ls -f *rasi > $ROFIPATH/tempdir/rasilist.txt
cd $ROFIPATHUSR
ls -f *rasi >> $ROFIPATH/tempdir/rasilist.txt

sed -i 's|.rasi||g' $ROFIPATH/tempdir/rasilist.txt


#select theme

TEXTTHEME1="$(gettext '\n<b>Select rofi theme to make current</b>
Double click a theme name to open a preview rofi.\n')"

NEWTHEME=$( yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --text="$TEXTTHEME1" --width=600 --height=400 --borders=20 --center --fixed --list --no-headers --separator="" --column=Style --text-align=left --dclick-action='@bash -c "rofi_preview %s;"' < $ROFIPATH/tempdir/rasilist.txt )

GETOUT=$(echo "$?")

if [ "$GETOUT" != 0 ]; then

	  exit

fi


#make current

cd $HOME/.config/rofi/

ROFIOLD="$(grep "@theme" $HOME/.config/rofi/config.rasi | tail -1)"
ROFIOLDCOMMENT="//$ROFIOLD"
ROFIOLD=$(echo "${ROFIOLD}" | sed -e 's/[]$\/*[\^]/\\&/g' )
ROFIOLDCOMMENT=$(echo "${ROFIOLDCOMMENT}" | sed -e 's/[]$\/*[\^]/\\&/g' )


if [ ! -f $ROFIPATH/$NEWTHEME.rasi ]; then

	ROFINEW="@theme \""$ROFIPATHUSR"/"$NEWTHEME".rasi"\"
	
else

	ROFINEW="@theme \""$ROFIPATH"/"$NEWTHEME".rasi"\"

fi

sed -i "s/$ROFIOLD/$ROFIOLDCOMMENT/g" config.rasi

sed -i 's/\/\/\/\/@/\/\/@/g' config.rasi

echo $ROFINEW >> config.rasi


TEXTTHEME2="$(eval_gettext 'All done!\n\n<b>$NEWTHEME</b> has been set as the current rofi theme.\n\n')"

yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --height=200 --fixed --center --borders=20 --text="$TEXTTHEME2" --text-align=center --button="OK" \

exit

}


###################################################################
###################################################################
# function rofi_tabs

rofi_tabs() {

TITLE="$(gettext 'Rofi-Tab-Selector')"
CLASS="mxrm"
ROFIPATH="$HOME/.config/rofi/themes"
ROFIPATHUSR="/usr/share/rofi/themes"
ICONPATH="/usr/share/pixmaps/mxrm-icon.png"
source gettext.sh

TEXTTABS1="$(gettext '
<b>Select which tabs rofi should display</b>
drun: the MX-21 default that displays available apps
calc: a powerful calculation engine
run: displays all available executable files
ssh: opens a secure shell
window: enables easy switching
help: a set of links about using rofi
none: tab will not be shown
\n')"

TABS=(yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --text="$TEXTTABS1" --text-align=left --height=400 --width=600 --borders=20 --center --separator=" " --form --columns=3 --button="gtk-cancel":1 --button="gtk-ok":0 \
--field="$(gettext '1st Tab')":CB "drun!calc!run!ssh!window!help" \
--field="$(gettext '2nd Tab')":CB "help!calc!drun!run!ssh!window!none" \
--field="$(gettext '3rd Tab')":CB "none!help!calc!drun!run!ssh!window" \
)

NEWTABS=$("${TABS[@]}")
(($?==0)) && echo "$NEWTABS" > $ROFIPATH/tempdir/temptabs.txt

GETOUT=$(echo "$?")

if [ "$GETOUT" != 0 ]; then

	  exit

fi

read -r -a TEMPTABS < $ROFIPATH/tempdir/temptabs.txt

	TAB0="${TEMPTABS[0]}"
	TAB1="${TEMPTABS[1]}"
	TAB2="${TEMPTABS[2]}"

NEWTABS="modi: \""$TAB0","$TAB1","$TAB2"\";"

	NEWTABS=$(echo "${NEWTABS}" | sed -e "s/help/help\:\/usr\/share\/rofi\/rofi-help/g" )
	NEWTABS=$(echo "${NEWTABS}" | sed -e "s/calc/calc\:qalc/g" )
	NEWTABS=$(echo "${NEWTABS}" | sed -e "s/,none//g" )

	NEWTABS=$(echo "${NEWTABS}" | sed -e 's/[]$\/*[\^]/\\&/g' )


OLDTABS="$(grep "modi" $HOME/.config/rofi/config.rasi)"
OLDTABS=$(echo "${OLDTABS}" | sed -e 's/[]$\/*[\^]/\\&/g' )


cd $HOME/.config/rofi/
sed -i -e "s/${OLDTABS}/${NEWTABS}/g" config.rasi

TEXTTABS2="$(gettext 'All done!\n\nTab configuration has been updated.\n\n')"

yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --height=200 --fixed --center --borders=20 --text="$TEXTTABS2" --text-align=center --button="OK" \


exit

}


###################################################################
###################################################################
# function rofi_position

rofi_position() {

TITLE="$(gettext 'Rofi-Position')"
CLASS="mxrm"
ROFIPATH="$HOME/.config/rofi/themes"
ROFIPATHUSR="/usr/share/rofi/themes"
ICONPATH="/usr/share/pixmaps/mxrm-icon.png"
source gettext.sh

###################################################################
# function rofi_help-position

rofi_help-position() {

TITLE="$(gettext 'MX-Rofi-Help')"
CLASS="mxrm"
#/usr/share/mx-rofi-manager/mxrm-helptext-position 

yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" \
--borders=20 --width=600 --height=600 --center --fixed --text-info --wrap --margins=20 < $HOME/Dokumente/mxrm-helptext-position  --fontname="12" --button="gtk-close" \
	
}

export -f rofi_help-position

###################################################################


#get current rofi & check if MX-comfort based
ROFICURRENT="$(grep '@theme' $HOME/.config/rofi/config.rasi | tail -1)"

ROFICURRENT=$(echo "${ROFICURRENT}" | sed -e 's/\"//g' )
ROFICURRENT=$(echo "${ROFICURRENT}" | sed -e 's/@theme//g' )


#check theme is MX-comfort based

ROFICOMFORTCHECK="$(grep 'with tabs' $ROFICURRENT)"

TEXTSORRY="$(gettext 'Sorry, this function is only available for MX-comfort based rofi themes\n\nTo adjust the current rofi theme you need to manually edit the .rasi file.\n\n')"


if [ "$ROFICOMFORTCHECK" = "" ]; then

	yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" \
	--borders=20 --width=600 --height=600 --center --fixed --margins=20 --button="gtk-close" \
	--text="$TEXTSORRY" --text-align=center --button="gtk-OK" \
	
	exit



fi


#get current position

ROFILOCATIONOLD="$(grep "location" $ROFICURRENT)"

	if [ "$ROFILOCATIONOLD" = "" ]; then

		ROFILOCATIONOLD='     location: center;'
		sed -ie "/^window/a $ROFILOCATIONOLD" $ROFICURRENT

	fi
	
LOCVALUE=$(echo "${ROFILOCATIONOLD}" | sed -e 's/location\://g' | sed -e 's/\;//g' | sed -e 's/ //g')

ROFILOCATIONOLD=$(echo "${ROFILOCATIONOLD}" | sed -e 's/[]$\/*[\^]/\\&/g' )

######

ROFIANCHOROLD="$(grep "anchor" $ROFICURRENT)"

	if [ "$ROFIANCHOROLD" = "" ]; then

		ROFIANCHOROLD='     anchor: center;'
		sed -ie "/^window/a $ROFIANCHOROLD" $ROFICURRENT

	fi
	
ANCVALUE=$(echo "${ROFIANCHOROLD}" | sed -e 's/anchor\://g' | sed -e 's/\;//g' | sed -e 's/ //g' )

ROFIANCHOROLD=$(echo "${ROFIANCHOROLD}" | sed -e 's/[]$\/*[\^]/\\&/g' )

#####

ROFIXOFFSETOLD="$(grep "x-offset" $ROFICURRENT)"

	if [ "$ROFIXOFFSETOLD" = "" ]; then

		ROFIXOFFSETOLD='     x-offset: 0;'
		sed -ie "/^window/a $ROFIXOFFSETOLD" $ROFICURRENT

	fi

XOFFVALUE=$(echo "${ROFIXOFFSETOLD}" | sed -e 's/x-offset\://g' | sed -e 's/\;//g' )

ROFIXOFFSETOLD=$(echo "${ROFIXOFFSETOLD}" | sed -e 's/[]$\/*[\^]/\\&/g' )

#####

ROFIYOFFSETOLD="$(grep "y-offset" $ROFICURRENT)"

	if [ "$ROFIYOFFSETOLD" = "" ]; then

		ROFIYOFFSETOLD='     y-offset: 0;'
		sed -ie "/^window/a $ROFIYOFFSETOLD" $ROFICURRENT

	fi
	
YOFFVALUE=$(echo "${ROFIYOFFSETOLD}" | sed -e 's/y-offset\://g' | sed -e 's/\;//g' )
	
ROFIYOFFSETOLD=$(echo "${ROFIYOFFSETOLD}" | sed -e 's/[]$\/*[\^]/\\&/g' )

#####

ROFIWIDTHOLD="$(grep "width" $ROFICURRENT)"

	if [ "$ROFIWIDTHOLD" = "" ]; then

		ROFIWIDTHOLD='     width: 30%;'
		sed -ie "/^window/a $ROFIWIDTHOLD" $ROFICURRENT

	fi
	
WIDVALUE=$(echo "${ROFIWIDTHOLD}" | sed -e 's/width\://g' | sed -e 's/\;//g' | sed -e 's/\%//g' )

ROFIWIDTHOLD=$(echo "${ROFIWIDTHOLD}" | sed -e 's/[]$\/*[\^]/\\&/g' )

#####

ROFIHEIGHTOLD="$(grep "lines" $ROFICURRENT)"

	if [ "$ROFIHEIGHTOLD" = "" ]; then

		ROFIHEIGHTOLD='     lines: 12;'
		sed -ie "/^listview/a $ROFIHEIGHTOLD" $ROFICURRENT

	fi
	
LINVALUE=$(echo "${ROFIHEIGHTOLD}" | sed -e 's/lines\://g' | sed -e 's/\;//g' )

ROFIHEIGHTOLD=$(echo "${ROFIHEIGHTOLD}" | sed -e 's/[]$\/*[\^]/\\&/g' )


#get new position
#MAINPOS

MAINPOS=(yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --borders=20 --center --width=600 --height=400 --fixed --form --columns=1 --align=left --separator=" " --button="gtk-help":"bash -c rofi_help-position" --button="gtk-cancel":1 --button="gtk-ok":0 \
--text="$(gettext '<b>\nAdjust the location and size of the current rofi window.\n</b>')" \
--field="$(gettext 'Location of rofi window on the screen')":CB "$LOCVALUE!northwest!north!northeast!west!center!east!southwest!south!southeast" \
--field="$(gettext 'Anchor position within rofi window')":CB "$ANCVALUE!northwest!north!northeast!west!center!east!southwest!south!southeast" \
--field="$(gettext 'X-Offset (negative to left, positive to right)')":NUM "$XOFFVALUE\!-100..100\!1\!0" \
--field="$(gettext 'Y-Offset (negative upwards, positive downwards)')":NUM "$YOFFVALUE\!-100..100\!1\!0" \
--field="$(gettext 'Width (percentage of screen width)')":NUM "$WIDVALUE\!1..100\!1\!0" \
--field="$(gettext 'Height (number of lines shown in list)')":NUM "$LINVALUE\!1..25\!1\!0" \
)

POS=$("${MAINPOS[@]}")
	(($?==0)) && echo "$POS" > $ROFIPATH/tempdir/tempposition.txt

GETOUT=$(echo "$?")

if [ "$GETOUT" != 0 ]; then

	  exit

elif [ "$GETOUT" = 0 ]; then

	  cd $ROFIPATH/tempdir

	  read -r -a NEWPOS < tempposition.txt

	  LOCNEW="${NEWPOS[0]}"
	  ANCNEW="${NEWPOS[1]}"
	  XOFNEW="${NEWPOS[2]}"
	  YOFNEW="${NEWPOS[3]}"
	  WIDNEW="${NEWPOS[4]}"
	  HIGNEW="${NEWPOS[5]}"

fi

ROFILOCATIONNEW="location: "$LOCNEW";"
ROFILOCATIONNEW=$(echo "${ROFILOCATIONNEW}" | sed -e 's/[]$\/*[\^]/\\&/g' )

ROFIANCHORNEW="anchor: "$ANCNEW";"
ROFIANCHORNEW=$(echo "${ROFIANCHORNEW}" | sed -e 's/[]$\/*[\^]/\\&/g' )

ROFIXOFFSETNEW="x-offset: "$XOFNEW";"
ROFIXOFFSETNEW=$(echo "${ROFIXOFFSETNEW}" | sed -e 's/[]$\/*[\^]/\\&/g' )

ROFIYOFFSETNEW="y-offset: "$YOFNEW";"
ROFIYOFFSETNEW=$(echo "${ROFIYOFFSETNEW}" | sed -e 's/[]$\/*[\^]/\\&/g' )

ROFIWIDTHNEW="width: "$WIDNEW"%;"
ROFIWIDTHNEW=$(echo "${ROFIWIDTHNEW}" | sed -e 's/[]$\/*[\^]/\\&/g' )

ROFIHEIGHTNEW="lines: "$HIGNEW";"
ROFIHEIGHTNEW=$(echo "${ROFIHEIGHTNEW}" | sed -e 's/[]$\/*[\^]/\\&/g' )



sed -i -e "s/${ROFILOCATIONOLD}/${ROFILOCATIONNEW}/g" $ROFICURRENT
sed -i -e "s/${ROFIANCHOROLD}/${ROFIANCHORNEW}/g" $ROFICURRENT
sed -i -e "s/${ROFIXOFFSETOLD}/${ROFIXOFFSETNEW}/g" $ROFICURRENT
sed -i -e "s/${ROFIYOFFSETOLD}/${ROFIYOFFSETNEW}/g" $ROFICURRENT
sed -i -e "s/${ROFIWIDTHOLD}/${ROFIWIDTHNEW}/g" $ROFICURRENT
sed -i -e "s/${ROFIHEIGHTOLD}/${ROFIHEIGHTNEW}/g" $ROFICURRENT


TEXTPOSDONE1="$(eval_gettext 'All done!\nPosition and size of the current rofi theme have been amended.')"

yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --height=200 --fixed --center --borders=20 --text="$TEXTPOSDONE1" --text-align=center --button="OK" \
	

exit

}


###################################################################
###################################################################
# function rofi_font

rofi_font() {

TITLE="$(gettext 'Rofi-Font')"
CLASS="mxrm"
ROFIPATH="$HOME/.config/rofi/themes"
ROFIPATHUSR="/usr/share/rofi/themes"
ICONPATH="/usr/share/pixmaps/mxrm-icon.png"
source gettext.sh

###################################################################


#get current rofi & check if MX-comfort based
ROFICURRENT="$(grep '@theme' $HOME/.config/rofi/config.rasi | tail -1)"

ROFICURRENT=$(echo "${ROFICURRENT}" | sed -e 's/\"//g' )
ROFICURRENT=$(echo "${ROFICURRENT}" | sed -e 's/@theme//g' )
ROFICURRENT=$(echo "${ROFICURRENT}" | sed -e 's/ //g' )


#check theme is MX-comfort based

TEXTSORRY="$(gettext 'Sorry, this function is only available for MX-comfort based rofi themes\n\nTo adjust the current rofi theme you need to manually edit the .rasi file.\n\n')"

ROFICOMFORTCHECK="$(grep 'with tabs' $ROFICURRENT)"

if [ "$ROFICOMFORTCHECK" = "" ]; then

	yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" \
	--borders=20 --width=600 --height=400 --center --fixed --margins=20 \
	--text="$TEXTSORRY" --text-align=center --button="gtk-ok" \
	
	exit



fi


ROFIFONTOLD="$(grep "font" $ROFICURRENT | head -1 )"

	if [ "$ROFIFONTOLD" = "" ]; then

		ROFIFONTOLD='    font: "Noto Sans 12";'
		sed -ie "/^listview/a $ROFIFONTOLD" $ROFICURRENT

	fi
	
	
FONVALUE=$(echo "${ROFIFONTOLD}" | sed -e 's/font\://g' | sed -e 's/\;//g'| sed -e 's/\"//g' )

ROFIFONTOLD=$(echo "${ROFIFONTOLD}" | sed -e 's/[]$\/*"[\^]/\\&/g' )


#get new position
#MAINPOS

MAINPOS=(yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --borders=20 --center --width=600 --height=400 --fixed --form --columns=1 --align=left --separator=" " --button="gtk-help":"bash -c rofi_help-position" --button="gtk-cancel":1 --button="gtk-ok":0 \
--text="$(gettext '<b>\nAdjust the font of the current rofi window.\n</b>')" \

--field="$(gettext 'Font')":FN "$FONVALUE" \
)

POS=$("${MAINPOS[@]}")
	(($?==0)) && echo "$POS" > $ROFIPATH/tempdir/tempfont.txt

GETOUT=$(echo "$?")

if [ "$GETOUT" != 0 ]; then

	  exit

elif [ "$GETOUT" = 0 ]; then


	  cd $ROFIPATH/tempdir

	  read -r -a NEWPOS < tempfont.txt

	  FONNEW="${NEWPOS[@]}"

fi



ROFIFONTNEW="font: \""$FONNEW"\";"
ROFIFONTNEW=$(echo "${ROFIFONTNEW}" | sed -e 's/[]$\/"*[\^]/\\&/g' )

sed -i -e "s/${ROFIFONTOLD}/${ROFIFONTNEW}/g" $ROFICURRENT


TEXTFONTDONE="$(eval_gettext 'All done!\nFont of the current rofi theme has been amended.')"

yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --height=200 --fixed --center --borders=20 --text="$TEXTFONTDONE" --text-align=center --button="OK" \
	

exit

}



###################################################################
###################################################################
# function rofi_recolor

rofi_recolor() {
	
#mxrr MX-comfort-rofi-recolor
#Tool to edit colors in MX-comfort rofi theme
#V.0.6 by Melber and MX Devs, 09 September 2022
#License: GPL-3.0+

#define some variables

TITLE="$(gettext 'MX-Rofi-Recolor')"
CLASS="mxrm"
ROFIPATH="$HOME/.config/rofi/themes"
ICONPATH="/usr/share/pixmaps/mxrm-icon.png"
source gettext.sh

#read available styles

cd $ROFIPATH
ls -f *-rr > $ROFIPATH/tempdir/themelist.txt
sed -i 's|-rr||g' $ROFIPATH/tempdir/themelist.txt


#select starting style

TEXTBASE1="$(gettext '\n<b> Choose which theme to use as a starting point</b>\n')"

BASESTYLE=$( yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --text="$TEXTBASE1" --width=600 --height=400 --center --list --no-headers --separator="" --column=Style --text-align=center < $ROFIPATH/tempdir/themelist.txt )

GETOUT=$(echo "$?")

if [ "$GETOUT" != 0 ]; then

	exit

fi


if [ -z "$BASESTYLE" ]; then

	TEXTBASE2="$(gettext 'No theme selected.\n\n<b>MX-comfort</b> will be used as the starting theme.')"

	yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --text="$TEXTBASE2" --button=OK --text-align=center --center --width=400 --height=200 --borders=20 \

	BASESTYLE=MX-comfort

fi


#read colors

cd $ROFIPATH

read -r -a NEWCOLORS < "$BASESTYLE"-rr

	COL01="${NEWCOLORS[0]}"
	COL02="${NEWCOLORS[1]}"
	COL03="${NEWCOLORS[2]}"
	COL04="${NEWCOLORS[3]}"
	COL05="${NEWCOLORS[4]}"
	COL06="${NEWCOLORS[5]}"
	COL07="${NEWCOLORS[6]}"
	COL08="${NEWCOLORS[7]}"
	COL09="${NEWCOLORS[8]}"
	COL10="${NEWCOLORS[9]}"
	COL11="${NEWCOLORS[10]}"
	NEWNAME="${NEWCOLORS[11]}"
	MAKECUR="${NEWCOLORS[12]}"


# function to be called with yad button

color_picker() {
	source gettext.sh
    local N=$1 C="$2"
	local YAD=(
            yad
            --title="$(gettext 'mxrr-color-selector')"
            --class=color-select
            --window-icon=color-select
            --posx=200
            --posy=200
            --color
            --init-color="${C:=white}"
            )
	C=$("${YAD[@]}")
	(($?==0)) && echo "$N:$C"
}


# function to be called with help button

mxrrhelp() {
source gettext.sh
yad --title="$(gettext 'MX-Rofi-Recolor Help')"  --class=mxrrhelp --window-icon="$ICONPATH" --borders=20 --fixed --center --width=600 --height=400 --image /usr/share/pixmaps/mxrr-help.png --button="$(gettext 'Return to Main Window')":1 \

}

export -f color_picker mxrrhelp

#MAIN
#color selection dialogue

MAIN=(yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --borders=20 --center --width=600 --height=400 --fixed --form --columns=5 --align=right --separator=" " --button="gtk-help":"bash -c mxrrhelp" --button="gtk-cancel":1 --button="gtk-ok":0 \
--text="$(gettext '<b>\nEdit colors and create a new rofi theme.\n\n</b>')" \
--field="$(gettext 'Title Background')":CLR "$COL01" \
--field="$(gettext 'Title Text')":CLR "$COL02" \
--field="$(gettext 'Searchbar Background')":CLR "$COL03" \
--field="$(gettext 'Searchbar Text')":CLR "$COL04" \
--field="$(gettext 'Inactive Tab Background')":CLR "$COL05" \
--field="$(gettext 'Inactive Tab Text')":CLR "$COL06" \
--field=" ":LBL " " \
--field=" ":LBL " " \
--field=" ":LBL " " \
--field='!color-select':BTN '@bash -c "color_picker 1 %1;"'
--field='!color-select':BTN '@bash -c "color_picker 2 %2;"'
--field='!color-select':BTN '@bash -c "color_picker 3 %3;"'
--field='!color-select':BTN '@bash -c "color_picker 4 %4;"'
--field='!color-select':BTN '@bash -c "color_picker 5 %5;"'
--field='!color-select':BTN '@bash -c "color_picker 6 %6;"'
--field=" ":LBL " " \
--field=" ":LBL " " \
--field=" ":LBL " " \
--field="$(gettext 'Active Tab Background')":CLR "$COL07" \
--field="$(gettext 'Active Tab Text')":CLR "$COL08" \
--field="$(gettext 'Active Tab Highlight')":CLR "$COL09" \
--field="$(gettext 'Selection Background')":CLR "$COL10" \
--field="$(gettext 'Selection Text')":CLR "$COL11" \
--field=" ":LBL " " \
--field=" ":LBL " " \
--field=" ":LBL " " \
--field=" ":LBL " " \
--field='!color-select':BTN '@bash -c "color_picker 19 %19;"'
--field='!color-select':BTN '@bash -c "color_picker 20 %20;"'
--field='!color-select':BTN '@bash -c "color_picker 21 %21;"'
--field='!color-select':BTN '@bash -c "color_picker 22 %22;"'
--field='!color-select':BTN '@bash -c "color_picker 23 %23;"'
--field=" ":LBL " " \
--field=" ":LBL " " \
--field=" ":LBL " " \
--field=" ":LBL " " \
--field="$(gettext '<b>Name for new theme</b>     ')":LBL " " \
--field=" " ""$NEWNAME"" \
--field="$(gettext '<b>Make new theme current?</b>')":LBL " " \
--field=" ":CB "yes!no" \
--field=" ":LBL " " \
--field=" ":LBL " " \
)

COLOURS=$("${MAIN[@]}")
	(($?==0)) && echo "$COLOURS" > $ROFIPATH/tempdir/tempmain.txt

GETOUT=$(echo "$?")

if [ "$GETOUT" != 0 ]; then

	  exit

elif [ "$GETOUT" = 0 ]; then

	  cd $ROFIPATH/tempdir

	  read -r -a NEWCOLORS < tempmain.txt

	  COL01="${NEWCOLORS[0]}"
	  COL02="${NEWCOLORS[1]}"
	  COL03="${NEWCOLORS[2]}"
	  COL04="${NEWCOLORS[3]}"
	  COL05="${NEWCOLORS[4]}"
	  COL06="${NEWCOLORS[5]}"
	  COL07="${NEWCOLORS[6]}"
	  COL08="${NEWCOLORS[7]}"
	  COL09="${NEWCOLORS[8]}"
	  COL10="${NEWCOLORS[9]}"
	  COL11="${NEWCOLORS[10]}"
	  NEWNAME="${NEWCOLORS[11]}"
	  MAKECUR="${NEWCOLORS[12]}"

fi


#check theme names yes no

if [ "$NEWNAME" = 'yes' -o "$NEWNAME" = 'no' ]; then

	  MAKECUR="$NEWNAME"  

	  NEWNAME=$(yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --height=200 --fixed --text="$(gettext 'No Theme name!')" --form --center --borders=20 --separator="" \
	--field="$(gettext '<b>Name for new theme</b>')":LBL " " \
	--field=" " "$(gettext 'New theme name')" )
    
	GETOUT=$(echo "$?")

	if [ "$GETOUT" != 0 ]; then

		exit

	fi

fi


#check new theme name is not empty and forbid MX-comfort overwrite

while [ -z "$NEWNAME" -o "$NEWNAME" = 'MX-comfort' -o "$NEWNAME" = 'MX-comfort-dark' -o "$NEWNAME" = 'MX-comfort-plus' -o "$NEWNAME" = 'MX-comfort-plus-dark' ]; do

	  NEWNAME=$(yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --height=200 --fixed --text="$(eval_gettext 'Theme name $NEWNAME is protected. Choose another name')" --form --center --borders=20 --separator="" \
	--field="$(gettext '<b>Name for new style</b>')":LBL " " \
	--field=" " "$NEWNAME-new" )

    GETOUT=$(echo "$?")

    if [ "$GETOUT" != 0 ]; then

		exit

    fi

done


#check if new theme name exists, if yes ask if overwrite or different style name

cd $ROFIPATH

while [ -f $NEWNAME.rasi ]; do

	  yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --fixed --text="$(eval_gettext 'A Theme with this name already exists. \n\nDo you want to overwrite <b>$NEWNAME</b>\nor save as a different theme name?\n')" --button="$(eval_gettext 'Overwrite $NEWNAME')":2 --button="$(gettext 'Save as different theme name')":3 --text-align=center --center --borders=20\

	case $? in

	2) rm -r $ROFIPATH/$NEWNAME.rasi   ;;

	3) NEWNAME=$(yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --height=200 --fixed --form --center --borders=20 --separator="" \
    --field="$(gettext '<b>Name for new theme</b>')":LBL " " \
    --field=" " "$NEWNAME-new" )    ;;

	252) exit 0    ;;

	esac
  
done


#create -rr file, copy and amend .rasi file

cd $ROFIPATH

echo ""$COL01" "$COL02" "$COL03" "$COL04" "$COL05" "$COL06" "$COL07" "$COL08" "$COL09" "$COL10" "$COL11" "$NEWNAME" "$MAKECUR"" > $ROFIPATH/$NEWNAME-rr

cp -r $ROFIPATH/template.rasi $ROFIPATH/$NEWNAME.rasi

sed -i "s/NEWNAME/$NEWNAME/g" $NEWNAME.rasi
sed -i "s/xyz001/$COL01/g" $NEWNAME.rasi
sed -i "s/xyz002/$COL02/g" $NEWNAME.rasi
sed -i "s/xyz003/$COL03/g" $NEWNAME.rasi
sed -i "s/xyz004/$COL04/g" $NEWNAME.rasi
sed -i "s/xyz005/$COL05/g" $NEWNAME.rasi
sed -i "s/xyz006/$COL06/g" $NEWNAME.rasi
sed -i "s/xyz007/$COL07/g" $NEWNAME.rasi
sed -i "s/xyz008/$COL08/g" $NEWNAME.rasi
sed -i "s/xyz009/$COL09/g" $NEWNAME.rasi
sed -i "s/xyz010/$COL10/g" $NEWNAME.rasi
sed -i "s/xyz011/$COL11/g" $NEWNAME.rasi


#set new theme as current

if [ "$MAKECUR" = yes ]; then

	cd $HOME/.config/rofi/

	ROFIOLD="$(grep "@theme" $HOME/.config/rofi/config.rasi | tail -1)"
	ROFIOLDCOMMENT="//$ROFIOLD"	
	ROFIOLD=$(echo "${ROFIOLD}" | sed -e 's/[]$\/*[\^]/\\&/g' )
	ROFIOLDCOMMENT=$(echo "${ROFIOLDCOMMENT}" | sed -e 's/[]$\/*[\^]/\\&/g' )


	ROFINEW="@theme \""$ROFIPATH"/"$NEWNAME".rasi\""

	sed -i "s/$ROFIOLD/$ROFIOLDCOMMENT/g" config.rasi

	echo $ROFINEW >> config.rasi

	TEXTALLDONE1="$(eval_gettext 'All done!\n<b>$NEWNAME</b> has been set as the current rofi theme.')"

	yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --height=200 --fixed --center --borders=20 --text="$TEXTALLDONE1" --text-align=center --button="OK" \

fi


if [ "$MAKECUR" = no ]; then

	TEXTALLDONE2="$(eval_gettext 'All done!\n<b>$NEWNAME</b> Rofi theme has been created.\n\nYou can change themes with <b>MX-Rofi-Manager</b>')"

	yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --width=400 --height=200 --fixed --center --borders=20 --text="$TEXTALLDONE2" --text-align=center --button="OK" \
  
fi

exit


}


###################################################################
###################################################################
# function rofi_edit

rofi_edit() {

TITLE="$(gettext 'Rofi-Edit')"
CLASS="mxrm"
ROFIPATH="$HOME/.config/rofi/themes"
ROFIPATHUSR="/usr/share/rofi/themes"
ICONPATH="/usr/share/pixmaps/mxrm-icon.png"
source gettext.sh

#find editor

which mxfb-edit >/dev/null && MX_EDITOR="mxfb-edit"
[[ -z $MX_EDITOR ]] && MX_EDITOR=fpad



#read available themes

cd $ROFIPATH
ls -f *rasi > $ROFIPATH/tempdir/editlist.txt
cd $ROFIPATHUSR
ls -f *rasi >> $ROFIPATH/tempdir/editlist.txt


#select theme

TEXTEDIT1="$(gettext '\n<b>Select the rofi theme you wish to edit</b>\n\nThe .rasi file will be opened in your preferred text editor\n\n')"

EDITTHEME=$( yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --text="$TEXTEDIT1" --width=600 --height=400 --borders=20 --center --list --no-headers --separator="" --column=Style --text-align=left < $ROFIPATH/tempdir/editlist.txt )

GETOUT=$(echo "$?")

if [ "$GETOUT" != 0 ]; then

	exit

fi

if [ ! -f $ROFIPATH/$EDITTHEME ]; then

	EDITTHEMEUSR="$ROFIPATHUSR/$EDITTHEME"

	COPYTIME=$(date +%Y"%m%d")
	
	EDITTHEME=$(echo "${EDITTHEME}" | sed -e 's/.rasi//g' )

	EDITTHEMECOPY="$EDITTHEME"_"$COPYTIME".rasi

	cp $EDITTHEMEUSR $ROFIPATH/$EDITTHEMECOPY

	TEXTEDIT2="$(eval_gettext '\nThe theme to be edited has been saved in\n<b>$ROFIPATH</b> as\n\n<b>$EDITTHEMECOPY</b>\n\n')"

	yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --text="$TEXTEDIT2" --width=600 --height=400 --borders=20 --center --text-align=center

	GETOUT=$(echo "$?")

		if [ "$GETOUT" != 0 ]; then

		exit

		fi


	$MX_EDITOR $ROFIPATH/$EDITTHEMECOPY


else

	EDITTHEME="$ROFIPATH/$EDITTHEME"

	$MX_EDITOR $EDITTHEME

fi

exit

}


###################################################################
###################################################################
# function rofi_help

rofi_help() {

TITLE="$(gettext 'MX-Rofi-Help')"
CLASS="mxrm"
ICONPATH="/usr/share/pixmaps/mxrm-icon.png"

yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" \
--borders=20 --width=600 --height=600 --center --fixed --text-info --wrap --margins=20 < /usr/share/mx-rofi-manager/mxrm-helptext  --fontname="12" --show-uri --button="gtk-close" \
	
}

###################################################################

export -f rofi_theme rofi_tabs rofi_position rofi_font rofi_recolor rofi_edit
export -f rofi_help

###################################################################
###################################################################

#MAIN WINDOW
TITLE="$(gettext 'MX-Rofi-Manager')"
CLASS="mxrm"
ICONPATH="/usr/share/pixmaps/mxrm-icon.png"

TEXTMXRM="$(gettext '<b><big>Rofi Manager is a tool to configure rofi themes.</big>\n\nWhat would you like to do?</b>\n')"
BUTTONTHEME="$(gettext 'Change the current rofi theme')"
BUTTONTABS="$(gettext 'Change the functions (<i>modi</i>) of the rofi tabs')"
BUTTONPOSITION="$(gettext 'Change the location and size of the current Rofi window')"
BUTTONFONT="$(gettext 'Change the font of the current Rofi window')"
BUTTONRECOLOR="$(gettext 'Recolor a rofi theme based on MX-comfort')"
BUTTONEDIT="$(gettext 'Edit a rofi theme config file in text editor')"

yad --title="$TITLE" --class="$CLASS" --window-icon="$ICONPATH" --borders=20 --center --width=600 --height=400 --fixed --form --text-align=center --text="$TEXTMXRM" --button="gtk-help":"bash -c rofi_help" --button="gtk-close" --buttons-layout=spread \
--field="$BUTTONTHEME:FBTN" 'bash -c rofi_theme' \
--field="$BUTTONTABS:FBTN" 'bash -c rofi_tabs' \
--field="$BUTTONPOSITION:FBTN" 'bash -c rofi_position' \
--field="$BUTTONFONT:FBTN" 'bash -c rofi_font' \
--field="$BUTTONRECOLOR:FBTN" 'bash -c rofi_recolor' \
--field="$BUTTONEDIT:FBTN" 'bash -c rofi_edit' \
